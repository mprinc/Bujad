;getting linked IamWhats/interests:
; n1, n2 can be of breed actor or activity
to-report get-linked-IamWhats [node]
  let linked-IamWhats []
  ifelse(is-actor? node)[
    set linked-IamWhats iamwhats with [iamwhat-actor-neighbor? node]
   ]
  [
    set linked-IamWhats iamwhats with [iamwhat-activity-neighbor? node]    
  ] 
  
  report linked-IamWhats
end

;calculating and returning count of shared IamWhats/interests:
; n1, n2 can be of breed actor or activity
; NOTE: TODO: 0.5 is in the case when there
to-report get-shared-iamwhats-count-incremented-zero [n1 n2]
  let iamwhats-count count get-shared-iamwhats n1 n2
  if(iamwhats-count = 0)[set iamwhats-count 0.5]
  report iamwhats-count
end

;calculating and returning shared IamWhats/interests:
; n1, n2 can be of breed actor or activity
to-report get-shared-iamwhats [n1 n2]
  let shared_iamwhats []
     
  let n1IamWhats [] ; IamWhats connected to n1
  let n2IamWhats [] ; IamWhats connected to n2
  
  ifelse(is-actor? n1)
  [ask n1 [set n1IamWhats iamwhat-actor-neighbors]]
  [ask n1 [set n1IamWhats iamwhat-activity-neighbors]]
  
  ifelse(is-actor? n2)
  [ask n2 [set n2IamWhats iamwhat-actor-neighbors]]
  [ask n2 [set n2IamWhats iamwhat-activity-neighbors]]
  ; http://stackoverflow.com/questions/8425518/netlogo-two-agentsets-operations
  set shared_iamwhats iamwhats with [member? self n1IamWhats and member? self n2IamWhats]
  
  report shared_iamwhats
end

to-report get-shared-iamwhats_for_friendship [friendship]  
  let s_iamwhats []
  let s_actors []
  ask friendship[
    ask one-of both-ends [
      ask friendship[        
        set s_iamwhats get-shared-iamwhats myself other-end
       ; print word counter (word ": get-shared-iamwhats_for_friendship (" (word [label] of myself (word " - " (word [label] of other-end (word "): " count s_iamwhats)))))
      ]
    ]
  ]
  ;print word "actors count: " length s_actors
  ;ask first sort s_actors[
  ; ask friendship[        
  ;   set s_iamwhats get-shared-iamwhats myself other-end
  ;   print word "get-shared-iamwhats_for_friendship (" (word [label] of myself (word " - " (word [label] of other-end (word "): " count s_iamwhats))))
  ;  ]
  ;]
  ;set counter counter + 1
  report s_iamwhats
end