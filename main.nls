extensions [nw]

;  actors-num                 ;; number of actors existing in system, used for the initalization of model
;  friendship-avg-degree      ;; average degree of friendships for actors

; http://stackoverflow.com/questions/5830045/including-a-netlogo-source-file-into-another

__includes["friendship_model.nls" "friendship_manager_setup.nls" "friendship_model_activities_diffusion.nls" "friendship_dynamics.nls"]

; from the interface
;------------------------------------------
; Actor-price-absorption-restitution              ; amount of absorption price that actor gains over each tick
; Actor-price-emission-restitution                ; amount of emission price that actor gains over each tick
; Actor-iamwhat-num                               ; number of IAmWhats that each actor is interested in
; Links-show-extra                                ; indicates if we should have extra links (activity-actor, iamwhat-actor, ...) always visible

globals
[
  actor-inspection-selected
  activity-inspection-selected
  iamwhat-inspection-selected
  mouse-was-up? 
  last-activity
 ]

;;;;;;;;;;;;;;;;;;;;;;;
;;; Main Procedures ;;;
;;;;;;;;;;;;;;;;;;;;;;;


;; spring layout of infection tree while in tree mode
;; otherwise, layout all nodes and friendships
to do-layout
    repeat 5 [layout-spring actors friendships 0.03 20 20]
end

; responsible for executing one time tick in the model
to do-tick
  type "\n\nDifussing activities:\n"
  set last-activity diffuse-activity
  if last-activity != nobody [
    ;affect-relatinships-by-activity last-activity
  ]
  
  ask actors  with [effect-left > 0 ][
    set effect-left effect-left - 1
  ]
  
  reset-actors
  ask n-of 3 actors[
    set shape "face happy"
    set size ACTOR_SIZE_ACTIVE
    set effect-left 5
    set color blue + 2
  ]
  display
end

; This function recovers (heals) system (network) members
; in this case it includes only actors:
;   - they get reduced price on both absorption and emittion of activities for specified amount over the system tick
to recover-energies
  ask actors[
    set price-absorbed (price-absorbed - Actor-price-absorption-restitution)
    set price-emitted (price-emitted - Actor-price-emission-restitution)
  ]
end

to reset-actors
  ask actors  with [effect-left <= 0 ][
    set shape ACTOR_SHAPE_NEUTRAL
    set size ACTOR_SIZE_NEUTRAL
    set color blue
  ]
end

to dispatch-activity
  
end

; this function resets the history of the model and starts everything from the beginning but without changin structure or any randomly choosen initial parameters
to rest-history
end

; This is a on-mouse-click function (we add extra guarding variable to switch mouse-down? into mouse-click behaviour
to inspect-system
  ifelse (mouse-down?)
  [
    if (mouse-was-up?)[
      ; It checks what actor did we click on and then it shows info about it
      let nearest-actors actors with [distancexy-nowrap mouse-xcor mouse-ycor < 5]
      if any? nearest-actors
      [
        ask one-of nearest-actors
        [
          display-friendship-of-actor
        ]
        display
      ]

      ; It checks what activity did we click on and then it shows info about it
      let nearest-activities activities with [distancexy-nowrap mouse-xcor mouse-ycor < 5]
      if any? nearest-activities
      [
        ask one-of nearest-activities
        [
          display-selected-activity
        ]
        display
      ]

      ; It checks what iamwhat did we click on and then it shows info about it
      let nearest-iamwhats iamwhats with [distancexy-nowrap mouse-xcor mouse-ycor < 5]
      if any? nearest-iamwhats
      [
        ask one-of nearest-iamwhats
        [
          display-links-of-iamwhat
        ]
        display
      ]
    ]
    set mouse-was-up? false
  ][
    set mouse-was-up? true
  ]  
end

; displays the friendship of an actor
to display-friendship-of-actor
  if(actor-inspection-selected = 0) [set actor-inspection-selected nobody]
  if(actor-inspection-selected != nobody)[
    ask actor-inspection-selected[
      set color color - 2
      set size size - 2
      ask friendship-neighbors[
        set color color - 2
      ]
      ask my-friendships [
        set color color - 2
        ; friendships are always visible
        ;if(Links-show-extra = false)[set hidden? true]
      ]
      ; links to iamwhats
      ask iamwhat-actor-neighbors[
        set color color - 2
        set size size - 2
      ]
      ask my-iamwhat-actors [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]
    ]
  ]
  ifelse(actor-inspection-selected = self)[
    set actor-inspection-selected nobody
  ][
    set actor-inspection-selected self
    
    set color color + 2
    set size size + 2
    ask friendship-neighbors[
      set color color + 2
    ]
    ask my-friendships [
      set color color + 2
      set hidden? false
    ]
    ; links to iamwhats
    ask iamwhat-actor-neighbors[
      set color color + 2
      set size size + 2
    ]
    ask my-iamwhat-actors [
      set color color + 2
      set hidden? false
    ]
  ]
end

; displays the friendship of an actor
to display-selected-activity
  if(activity-inspection-selected = 0) [set activity-inspection-selected nobody]
  if(activity-inspection-selected != nobody)[
    ask activity-inspection-selected[
      set color color - 2
      set size size - 2
      ; equivalent to command link-neighbors
      ; Reports the agentset of all (actors) turtles found at the other end of undirected links connected to this turtle.
      
      ; equivalent to command in-<breed>-neighbors
      ask in-activity-actor-neighbors[
        set color color - 2
        set size size - 2
      ]
      ; equivalent to command out-<breed>-neighbors
      ask out-activity-actor-neighbors[
        set color color - 2
        set size size - 2
      ]
      ; equivalent to command my-out-<breeds>
      ask my-out-activity-actors [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]
      ; equivalent to command my-in-<breeds>
      ask my-in-activity-actors [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]

      ; links to iamwhats
      ask iamwhat-activity-neighbors[
        set color color - 2
        set size size - 2
      ]
      ask my-iamwhat-activities [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]

      ; links to activity-types
      ask activity-type-activity-neighbors[
        set color color - 2
        set size size - 2
      ]
      ask my-activity-type-activities [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]
    ]
  ]
  
  ifelse(activity-inspection-selected = self)[
    set activity-inspection-selected nobody
  ][
    set activity-inspection-selected self
    set color color + 2
    set size size + 2
    ; equivalent to command link-neighbors
    ; Reports the agentset of all (actors) turtles found at the other end of undirected links connected to this turtle.
    
    ; equivalent to command in-<breed>-neighbors
    ask in-activity-actor-neighbors[
      set color color + 2
      set size size + 2
    ]
    ; equivalent to command out-<breed>-neighbors
    ask out-activity-actor-neighbors[
      set color color + 2
      set size size + 2
    ]
    ; equivalent to command my-out-<breeds>
    ask my-out-activity-actors [
      set color color + 2
      set hidden? false
    ]
    ; equivalent to command my-in-<breeds>
    ask my-in-activity-actors [
      set color color + 2
      set hidden? false
    ]

    ; links to activities
    ask iamwhat-activity-neighbors[
      set color color + 2
      set size size + 2
    ]
    ask my-iamwhat-activities [
      set color color + 2
      set hidden? false
    ]

    ; links to activity-types
    ask activity-type-activity-neighbors[
      set color color + 2
      set size size + 2
    ]
    ask my-activity-type-activities [
      set color color + 2
      set hidden? false
    ]
  ]
end

; displays all links to selected iamwhat
; it displays links to actors that are interested in it, but it will display later activities also, etc
to display-links-of-iamwhat
  ; type "iamwhat-inspection-selected = " type iamwhat-inspection-selected type "\n"
  if(iamwhat-inspection-selected = 0) [set iamwhat-inspection-selected nobody]

  ; type "checking if iamwhat-inspection-selected is nobody. It is " type iamwhat-inspection-selected type "\n"
  if(iamwhat-inspection-selected != nobody)[
    ; type "restoring  iamwhat-inspection-selected = " type iamwhat-inspection-selected type "\n"
    ask iamwhat-inspection-selected[
      set color color - 2
      set size size - 2
      ask iamwhat-actor-neighbors[
        set color color - 2
        set size size - 2
      ]
      ask my-iamwhat-actors [
        set color color - 2
        if(Links-show-extra = false)[set hidden? true]
      ]      
    ]
  ]
  
  ifelse(iamwhat-inspection-selected = self)[
    ; type "resetting iamwhat-inspection-selected = " type iamwhat-inspection-selected type " to nobody\n"
    set iamwhat-inspection-selected nobody
  ][
    ; type "setting iamwhat-inspection-selected = " type self type "\n"
    set iamwhat-inspection-selected self
    set color color + 2
    set size size + 2
    ask iamwhat-actor-neighbors[
      set color color + 2
      set size size + 2
    ]
    ask my-iamwhat-actors [
    set color color + 2
    set hidden? false
    ]
  ]
end