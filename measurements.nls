to do_measurement
  if(MeasuringCase = "default")
  [
    loop [do-tick]
  ]
  
  if(MeasuringCase = "sasha")
  [
    loop [do-tick]
  ]
  
  if(MeasuringCase = "sinisha")
  [
    loop [do-tick]
  ]
  
  if(MeasuringCase = "HappinessByPopularity")
  [
    measure_HappinessByPopularity
  ]
  
  if(MeasuringCase = "HappinessByWayOfActivitySelection")
  [
    measure_HappinessByWayOfActivitySelection
  ]  
  
end


to do-plotting-measurement
  
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; measuring mean happiness based on popularity distribution
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to measure_HappinessByPopularity
  ;set popularity
  
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; measuring mean happiness based on choosing activities by popularity or shared interests
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to measure_HappinessByWayOfActivitySelection
  ; 
  let limit 20
  
  set-current-plot-pen "default"
  set Chooser-whom-to-send "popularity"
  reset-ticks; ??? DO we do this?
  while [ticks <= limit]
  [
    do-tick
  ]
  
  set-current-plot-pen "pen-2"
  set Chooser-whom-to-send "shared_interest"
  reset-ticks; ??? DO we do this?
  while [ticks <= limit]
  [
    do-tick
  ]
end

to do-plotting-HappinessByWayOfActivitySelection
  ;; plot the number of infected individuals at each step
  set-current-plot "Calc 1"  
  ;set-plot-pen-interval
  plotxy activities-num-emitted global_calculation_1
  
  
  set-current-plot-pen "blues"; histogram-from turtles with [ true ] [int assets]
  set-current-plot-pen "reds"; histogram-from turtles with [ color = red ] [ int assets ]
end
