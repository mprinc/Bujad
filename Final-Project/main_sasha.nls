; ========================================================================================
; do-tick personal commands
; ========================================================================================
globals[
  plot-for-each-number-of-activities
  ploted-on-activity-number
]

to do-tick-sasha-start
end

to do-tick-sinisha-start
end

to do-tick-sasha-end
  ; show word "Testing for plotting , activities-num-emitted = " word activities-num-emitted word ", " word (activities-num-emitted / 100) word " =? " floor (activities-num-emitted / 100) 
  ; every 100 activities
  if( (activities-num-emitted - ploted-on-activity-number) >= plot-for-each-number-of-activities)[
    show word "Plotting, activities-num-emitted = " activities-num-emitted
    set ploted-on-activity-number activities-num-emitted

    measure-happiness-per-node
  ]
  do-plotting-sasha  
end

to do-tick-sinisha-end
end

; ========================================================================================
; reset-history
; ========================================================================================

to rest-history-sasha
  set ploted-on-activity-number 0
end

to rest-history-sinisha
end

; ========================================================================================
; Visualization of calculations
; ========================================================================================
to do-plotting-sasha
     ;; plot the number of infected individuals at each step
     set-current-plot "Calc 1"
     set-current-plot-pen "default"
     ;set-plot-pen-interval
     plotxy activities-num-emitted global_calculation_1
end


; ========================================================================================
; setup personal commands
; ========================================================================================

to setup-start-sasha
  set plot-for-each-number-of-activities 100
  set ploted-on-activity-number 0
end

to setup-start-sinisha
end

to setup-end-sasha
  setup-manual-attractiveness-between-actors
  setup-random-popularity-for-actors
end

to setup-end-sinisha
end

to setup-manual-attractiveness-between-actors
  show "setup-manual-attractiveness-between-actors"
  ask actors[
    let actorsOther other actors
    foreach sort actorsOther[
      let actorOther ?
      let friendshipToOther friendship-with actorOther
      if(friendshipToOther != nobody)[
        ; file://localhost/Applications/NetLogo%205.0.3/docs/dictionary.html#random-normal
        let manualAtract random-normal Attractiveness-manual-mean Attractiveness-manual-standard-deviation
        if(manualAtract < 0)[set manualAtract 0]
        if(manualAtract > 1)[set manualAtract 1]
        
        actor-set-turtle-link-endpoint-value friendshipToOther "manual-attractiveness" manualAtract
        ;let value actor-get-turtle-link-endpoint-value friendshipToOther "manual-attractiveness"
        ;show word "value : " value
        
        ; we want bot friends have similar atractiveness
        let manualAtractOther manualAtract + random 0.1 - 0.05
        if(manualAtractOther < 0)[set manualAtractOther 0]
        if(manualAtractOther > 1)[set manualAtractOther 1]
        ask actorOther[
          actor-set-turtle-link-endpoint-value friendshipToOther "manual-attractiveness" manualAtract
        ]
      ]
    ]
  ]
end

to setup-random-popularity-for-actors
  show "setup-random-popularity-for-actors"
  ask actors[
    let popularityVal random-normal Popularity-random-mean Popularity-random-standard-deviation
    if(popularityVal < 0)[set popularityVal 0]
    if(popularityVal > 1)[set popularityVal 1]
    
    set popularity popularityVal
  ]
end